/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FramesYpaneles;
import DAO.ControlComentariosRatings;
import Negocio.Cliente;
import Negocio.Usuario;
import java.awt.TextArea;
import java.awt.event.ItemEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos
 */
public class ComentariosYRating extends javax.swing.JPanel {
    ControlComentariosRatings control = new ControlComentariosRatings();
    DefaultTableModel modelo; 
    /**
     * Creates new form PanComentariosYRatingEmpleados
     */
    public ComentariosYRating() {
        initComponents();
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jText_Comentario = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableAmbos = new javax.swing.JTable();
        btnGuardarComentariosEmpleado = new javax.swing.JButton();
        boxCalificacion = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boxTipo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jText_Comentario.setColumns(20);
        jText_Comentario.setRows(5);
        jScrollPane2.setViewportView(jText_Comentario);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, 770, 150));

        TableAmbos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TableAmbos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableAmbosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableAmbos);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, 516, 170));

        btnGuardarComentariosEmpleado.setBackground(new java.awt.Color(252, 178, 1));
        btnGuardarComentariosEmpleado.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnGuardarComentariosEmpleado.setForeground(new java.awt.Color(49, 54, 56));
        btnGuardarComentariosEmpleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-guardar-30.png"))); // NOI18N
        btnGuardarComentariosEmpleado.setText("Guardar");
        btnGuardarComentariosEmpleado.setBorder(null);
        btnGuardarComentariosEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarComentariosEmpleadoActionPerformed(evt);
            }
        });
        add(btnGuardarComentariosEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 640, 140, 40));

        boxCalificacion.setBackground(new java.awt.Color(252, 178, 1));
        boxCalificacion.setFont(new java.awt.Font("Arimo", 1, 18)); // NOI18N
        boxCalificacion.setForeground(new java.awt.Color(49, 54, 56));
        boxCalificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5 Estrellas", "4 Estrellas", "3 Estrellas", "2 Estrellas", "1 Estrella" }));
        add(boxCalificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, -1, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Calificacion:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 420, -1, 20));

        jLabel2.setText("De Click para seleccionar y calificar");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        jLabel4.setText("Comentario:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 81, 20));

        boxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Empleado", "Cliente" }));
        boxTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxTipoItemStateChanged(evt);
            }
        });
        add(boxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 240, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Tipo:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));

        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });
        add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, 30, -1));

        jLabel6.setText("ID:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, -1, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Mensajes (2).png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, 80));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarComentariosEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarComentariosEmpleadoActionPerformed
        if (this.boxTipo.getSelectedItem().equals("Empleado")) {
            if (validarID(txt_id.getText())) {
                if (validarTextArea(jText_Comentario.getText())) {
                    ComentarioYCalificacionEmpleado();
                }
            }
            limpíarCampos();
        } else if (this.boxTipo.getSelectedItem().equals("Cliente")) {
            if (validarID(txt_id.getText())) {
                if (validarTextArea(jText_Comentario.getText())) {
                    ComentarioYCalificacionClientes();
                }
            }

               limpíarCampos();
            }else if(this.boxTipo.getSelectedItem().equals("Seleccionar")){
               ComentarioYCalificacionSeleciconar();
               limpíarCampos();
            }
        
        
        
        
    }//GEN-LAST:event_btnGuardarComentariosEmpleadoActionPerformed

    private void boxTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxTipoItemStateChanged
        if (evt.getStateChange()==ItemEvent.SELECTED) {
            if (this.boxTipo.getSelectedItem().equals("Empleado")) {
            consultarEmpleados();
            }else if(this.boxTipo.getSelectedItem().equals("Cliente")){
            consultarClientes();
            }else if(this.boxTipo.getSelectedItem().equals("Seleccionar")){
            consultarSeleccionar();
            }
        }
        
        
        
    }//GEN-LAST:event_boxTipoItemStateChanged

    private void TableAmbosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableAmbosMouseClicked
        int fila = TableAmbos.getSelectedRow();
        limpíarCampos();
        
        if (this.boxTipo.getSelectedItem().equals("Empleado")) {
        if (fila != -1) {
            txt_id.setText(TableAmbos.getValueAt(fila, 0).toString());
            
            try {
            if (TableAmbos.getValueAt(fila, 7).toString().equals("1 Estrella")) {
             boxCalificacion.setSelectedIndex(4);
            }else if(TableAmbos.getValueAt(fila, 7).toString().equals("2 Estrellas")){
              boxCalificacion.setSelectedIndex(3);
            }else if(TableAmbos.getValueAt(fila, 7).toString().equals("3 Estrellas")){
             boxCalificacion.setSelectedIndex(2);
            }else if(TableAmbos.getValueAt(fila, 7).toString().equals("4 Estrellas")){
            boxCalificacion.setSelectedIndex(1);
            }else if(TableAmbos.getValueAt(fila, 7).toString().equals("5 Estrellas")){
             boxCalificacion.setSelectedIndex(0);
            }
            
            jText_Comentario.setText(TableAmbos.getValueAt(fila, 6).toString());
          
            } catch (java.lang.NullPointerException e) {
            }
        }
        
        
            }else if(this.boxTipo.getSelectedItem().equals("Cliente")){
                if (fila != -1) {
            txt_id.setText(TableAmbos.getValueAt(fila, 0).toString());
            
            try {
            if (TableAmbos.getValueAt(fila, 8).toString().equals("1 Estrella")) {
             boxCalificacion.setSelectedIndex(4);
            }else if(TableAmbos.getValueAt(fila, 8).toString().equals("2 Estrellas")){
              boxCalificacion.setSelectedIndex(3);
            }else if(TableAmbos.getValueAt(fila, 8).toString().equals("3 Estrellas")){
             boxCalificacion.setSelectedIndex(2);
            }else if(TableAmbos.getValueAt(fila, 8).toString().equals("4 Estrellas")){
            boxCalificacion.setSelectedIndex(1);
            }else if(TableAmbos.getValueAt(fila, 8).toString().equals("5 Estrellas")){
             boxCalificacion.setSelectedIndex(0);
            }
            
            jText_Comentario.setText(TableAmbos.getValueAt(fila, 7).toString());
          
            } catch (java.lang.NullPointerException e) {
            }
        }
                
                

            }
        
        
    }//GEN-LAST:event_TableAmbosMouseClicked

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idActionPerformed
    
public void consultarEmpleados(){
    modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Email");
        modelo.addColumn("Telefono");
        modelo.addColumn("Tipo");
        modelo.addColumn("Comentarios");
        modelo.addColumn("Calificacion");
        this.TableAmbos.setModel(modelo);
    
     List<Usuario> list = control.listarUsuarios();
        DefaultTableModel model= (DefaultTableModel) TableAmbos.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        Object rowData[]=new Object[8];
        for(int i=0; i<list.size();i++){
            rowData[0]=list.get(i).id;
            rowData[1]=list.get(i).nombres;
            rowData[2]=list.get(i).apellidos;
            rowData[3]=list.get(i).email;
            rowData[4]=list.get(i).telefono;
            rowData[5]=list.get(i).tipo;
            rowData[6]=list.get(i).comentarios;
            rowData[7]=list.get(i).calificacion;
            model.addRow(rowData);
        } 
  }

public void consultarClientes(){
    modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Empresa");
        modelo.addColumn("Email");
        modelo.addColumn("Telefono");
        modelo.addColumn("Rfc");
        modelo.addColumn("Comentarios");
        modelo.addColumn("Calificacion");
        this.TableAmbos.setModel(modelo);
    
       List<Cliente> list = control.listarClientes();
        DefaultTableModel model= (DefaultTableModel) TableAmbos.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        Object rowData[]=new Object[9];
        for(int i=0; i<list.size();i++){
            rowData[0]=list.get(i).id;
            rowData[1]=list.get(i).nombres;
            rowData[2]=list.get(i).apellidos;
            rowData[3]=list.get(i).empresa;
            rowData[4]=list.get(i).email;
            rowData[5]=list.get(i).telefono;
            rowData[6]=list.get(i).rfc;
            rowData[7]=list.get(i).comentarios;
            rowData[8]=list.get(i).calificacion;
            model.addRow(rowData);
        }
  }

public void consultarSeleccionar(){
        modelo = new DefaultTableModel();
        modelo.addColumn("");
        this.TableAmbos.setModel(modelo);
}

public void ComentarioYCalificacionEmpleado(){
            Usuario usuario = new Usuario();
            usuario.setId(Integer.parseInt(txt_id.getText()));
            usuario.setComentarios(jText_Comentario.getText());
            usuario.setCalificacion(boxCalificacion.getSelectedItem().toString());
            
        if(control.CalificarYComentarUsuario(usuario)){
           JOptionPane.showMessageDialog(null, "Se Califico con exito al Empleado", "Empleado", JOptionPane.INFORMATION_MESSAGE);
        }else{
           JOptionPane.showMessageDialog(null, "Fallo al Calificar", "Empleado", JOptionPane.INFORMATION_MESSAGE);
        }
        consultarEmpleados();
}
    

public void ComentarioYCalificacionClientes(){
            Cliente cliente = new Cliente();
            cliente.setId(Integer.parseInt(txt_id.getText()));
            cliente.setComentarios(jText_Comentario.getText());
            cliente.setCalificacion(boxCalificacion.getSelectedItem().toString());
            
            

        if(control.CalificarYComentarCliente(cliente)){
           JOptionPane.showMessageDialog(null, "Se Califico con exito al Cliente", "Cliente", JOptionPane.INFORMATION_MESSAGE);
        }else{
           JOptionPane.showMessageDialog(null, "Fallo al Calificar", "Cliente", JOptionPane.INFORMATION_MESSAGE);
        }
        consultarClientes();
}

public void ComentarioYCalificacionSeleciconar(){
JOptionPane.showMessageDialog(null, "Favor de seleccionar al tipo de persona que quiera calificar", "Seleccione", JOptionPane.INFORMATION_MESSAGE);
}
 private void limpíarCampos() {
        this.txt_id.setText("");
        this.jText_Comentario.setText("");
        this.boxCalificacion.setSelectedIndex(0);
    }
 public static boolean validarTextArea(String textArea) {
    String contenido = textArea;
    if (contenido.isEmpty()) {
       JOptionPane.showMessageDialog(null, "El espacio no debe quedar en blanco");
        return false;
    }
    return true;
}
  public static boolean validarID(String id) {
    String contenido = id;
    if (contenido.isEmpty()) {
       JOptionPane.showMessageDialog(null, "Favor de seleccionar a un usuario de la lista.");
        return false;
    }
    return true;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableAmbos;
    private javax.swing.JComboBox<String> boxCalificacion;
    private javax.swing.JComboBox<String> boxTipo;
    private javax.swing.JButton btnGuardarComentariosEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jText_Comentario;
    private javax.swing.JTextField txt_id;
    // End of variables declaration//GEN-END:variables

   

    
}
